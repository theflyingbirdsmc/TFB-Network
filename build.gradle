import java.util.jar.JarFile
import org.yaml.snakeyaml.Yaml

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath("org.yaml:snakeyaml:2.0")
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:5.2.5"
  }
}

// Use environment instead of gradle.properties
if("$System.env.MAVEN_URL" != null) {
    ext.MAVEN_URL="$System.env.MAVEN_URL"+"/"+"tfb"
    ext.MAVEN_PASSWORD="$System.env.MAVEN_PASSWORD"
    ext.MAVEN_USERNAME="$System.env.MAVEN_USERNAME"
}

apply plugin: "com.jfrog.artifactory"
// apply plugin: 'java'
// apply plugin: 'groovy'
apply plugin: 'maven-publish'

ext.dir = new File("_plugins")
def files = ext.dir.listFiles().findAll { it.isFile() && it.name.endsWith('.jar') }
def allowedPrefixes = ["Paper", "Flamecord","Purpur", "Expansion"]

def dists = []

files.each { file ->
if (allowedPrefixes.any { prefix -> file.name.startsWith(prefix) } && file.name.endsWith(".jar")) {
        def fileName = file.name - '.jar' // Remove the ".jar" extension
        
        if (fileName.startsWith("Expansion-")) {
            // Handle Expansion files
            def parts = fileName.split('-')
            // println(parts)
            if (parts.size() >= 1) {
                def groupId = "PAPI-Expansion"
                def artifactId = "Expansion-" + parts[1]
                def version = parts[2]

                def path = file

                println("Found Expansion JAR: groupId=$groupId, artifactId=$artifactId, version=$version, path=$path")

                dists << [groupId: groupId, artifactId: artifactId, version: version, path: path]
            }
        } else {
            // Handle Paper and FlameCord files
            def parts = fileName.split('-')
            println(parts.toString())
            def groupId = "Server"
            def artifactId = parts[0]
            def version = parts[1]
            
            // Extract the version from the file name
            if (parts.size() > 2) {
                version += "-" + parts[2]
            }
            
            def path = file

            println("Found JAR: groupId=$groupId, artifactId=$artifactId, version=$version, path=$path")

            dists << [groupId: groupId, artifactId: artifactId, version: version, path: path]
            
        }
    } else {
        def jarFile = new JarFile(file)
        def pluginYml = (jarFile.getEntry("plugin.yml") != null) ? jarFile.getEntry("plugin.yml") : jarFile.getEntry("bungee.yml")
        
        if (pluginYml != null) {
            def yaml = new Yaml()
            def plugin = yaml.load(jarFile.getInputStream(pluginYml))
            
            def groupId = "Plugin"
            def artifactId = plugin.name
            //Adds "-Bungee" to artifact name for plugins like LuckPerms that wont rename their plugin when it's a Bungee-plugin.
            if(file.name.contains("Bungee") && !artifactId.contains("Bungee") || jarFile.getEntry("bungee.yml")) 
                artifactId += "-Bungee"
            def version = plugin.version.toString()
            
            if (version.contains(" ")) {
                version = version.replace(" ", "-")
            }
            
            def path = file

            println("Found JAR: groupId=$groupId, artifactId=$artifactId, version=$version, path=$path")

            dists << [groupId: groupId, artifactId: artifactId, version: version, path: path]
        }
    }
}

publishing {
    publications {
        dists.each { dist ->
            "$dist.artifactId"(MavenPublication) {
                groupId dist.groupId
                version = dist.version
                artifactId = dist.artifactId

                artifact dist.path
            }
        }
    }
}

artifactory {
    contextUrl = "https://jfrog.theflyingbirds.net/artifactory"
    publish {
        repository {
            repoKey = 'tfb'
            username = "${MAVEN_USERNAME}"
            password = "${MAVEN_PASSWORD}"
        }
        defaults {
            dists.each { dist ->
                publications(dist.artifactId)
            }
        }
    }
}
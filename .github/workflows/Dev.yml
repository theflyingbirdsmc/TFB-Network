name: TFB Dev env

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/Dev.yml
      - '.devcontainer/**'

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
    
      # Login to Harbor
      - name: Login to Nexus Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REPO }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .devcontainer/
          push: true
          tags: ${{ secrets.DOCKER_REPO }}/tfb-dev:latest
          build-args: |
            MAVEN_URL=${{ secrets.MAVEN_URL }}
            MAVEN_USERNAME=${{ secrets.MAVEN_USERNAME }}
            MAVEN_PASSWORD=${{ secrets.MAVEN_PASSWORD }}

      - name: Get short commit SHA
        if: github.ref == 'refs/heads/main'
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Get latest commit title
        if: github.ref == 'refs/heads/main'
        id: message
        run: echo "pr_title=$(git log --format=%s -n 1 ${{ github.sha }})" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: ./.github/actions/setup-tf

      - name: Terraform init and validate
        run: |
          cd .devcontainer/tfb-dev
          terraform init -upgrade
          terraform validate
          
      # Step 2: Install the Coder CLI
      - name: Install Coder CLI
        run: |
          curl -L https://coder.com/install.sh | sh

      # Step 3: Set environment variables and push template
      - name: Push template to Coder
        env:
          CODER_URL: ${{ secrets.CODER_URL }}
          CODER_SESSION_TOKEN: ${{ secrets.CODER_SESSION_TOKEN }}
        run: |
          export CODER_TEMPLATE_NAME=TFB
          export CODER_TEMPLATE_DIR=.devcontainer/tfb-dev
          export CODER_TEMPLATE_VERSION=$(git rev-parse --short HEAD)

          coder templates push --yes $CODER_TEMPLATE_NAME \
              --directory $CODER_TEMPLATE_DIR \
              --name=$CODER_TEMPLATE_VERSION
              
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Cleanup
        run: |
          gh extension install actions/gh-actions-cache
          
          REPO=${{ github.repository }}
          BRANCH="refs/pull/${{ github.event.pull_request.number }}/merge"

          echo "Fetching list of cache key"
          cacheKeysForPR=$(gh actions-cache list -R $REPO -B $BRANCH | cut -f 1 )

          ## Setting this to not fail the workflow while deleting cache keys. 
          set +e
          echo "Deleting caches..."
          for cacheKey in $cacheKeysForPR
          do
              gh actions-cache delete $cacheKey -R $REPO -B $BRANCH --confirm
          done
          echo "Done"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

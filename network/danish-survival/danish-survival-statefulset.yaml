apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: danish-survival
  namespace: tfb-network
  labels:
    run: danish-survival
    backstage.io/kubernetes-id: danish-survival
spec:
  serviceName: "danish-survival"
  replicas: 1
  selector:
    matchLabels:
      run: danish-survival
  template:
    metadata:
      labels:
        run: danish-survival
        backstage.io/kubernetes-id: danish-survival
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      nodeSelector:
        "topology.kubernetes.io/region": hel1
        "kubernetes.io/hostname": tfb-root-eu
      containers:
      - name: danish-survival
        image: docker.theflyingbirds.net/tfb-network/danish-survival:latest
        tty: true
        env:
          - name: TYPE
            value: "CUSTOM"
          - name: "CUSTOM_SERVER"
            value: "server.jar"
          - name: "EXEC_DIRECTLY"
            value: "false"
          - name: "ENABLE_RCON"
            value: "false"
          - name: "MEMORY"
            value: "8G"
          - name: "REPLACE_ENV_VARIABLE_PREFIX"
            value: "TFB_"
          - name: "REPLACE_ENV_IN_PLACE"
            value: "true"
        envFrom:
          - secretRef:
              name: world-danish-survival-seed
        ports:
          - containerPort: 30005
        command: ["/bin/sh", "-c"]
        # args: ["apt-get update && apt-get install -y screen && screen -dmS minecraft /start && tail -f /dev/null"]
        args: ["tail -f /dev/null"]
        securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
        volumeMounts:
          - name: danish-survival-world
            mountPath: /data/world_danish_survival
          - name: danish-survival-world-nether
            mountPath: /data/world_danish_survival_nether
          - name: danish-survival-world-the-end
            mountPath: /data/world_danish_survival_the_end
          - name: plugins-essentials-userdata
            mountPath: /data/plugins/Essentials/userdata
          - name: plugins-essentials-warps
            mountPath: /data/plugins/Essentials/warps
          - name: plugins-worldguard-worlds
            mountPath: /data/plugins/WorldGuard/worlds
          # - name: plugins-multiverse-core-worlds
          #   mountPath: /data/plugins/Multiverse-Core/worlds.yml
        resources:
          requests:
            memory: "8Gi"
            cpu: "1000m"
        # livenessProbe:
        #   tcpSocket:
        #     port: 30005
        #   initialDelaySeconds: 60
        #   periodSeconds: 20
        #   failureThreshold: 3
        # readinessProbe:
        #   tcpSocket:
        #     port: 30005
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   failureThreshold: 2
        # startupProbe:
        #   tcpSocket:
        #     port: 30005
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   failureThreshold: 30
      imagePullSecrets:
        - name: regcred
  volumeClaimTemplates:
  - metadata:
      name: danish-survival-world
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 15Gi
  - metadata:
      name: danish-survival-world-nether
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 6Gi
  - metadata:
      name: danish-survival-world-the-end
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: plugins-essentials-userdata
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: plugins-essentials-warps
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 100Mi
  - metadata:
      name: plugins-worldguard-worlds
    spec:
      storageClassName: longhorn-tfb-network
      accessModes: ["ReadWriteOncePod"]
      resources:
        requests:
          storage: 100Mi
  # - metadata:
  #     name: plugins-multiverse-core-worlds
  #   spec:
  #     accessModes: ["ReadWriteOnce"]
  #     resources:
  #       requests:
  #         storage: 100Mi